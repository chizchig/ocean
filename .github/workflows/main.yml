name: Build and Deploy app

on:
  push:
    branches:
      - master

jobs: 
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Generate image tag based on date and time
      id: datetime
      run: echo "::set-output name=tag::$(date +'%Y%m%d%H%M%S')"

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t shadowhub/raz:${{ steps.datetime.outputs.tag }} .

    - name: Push Docker image to Docker Hub
      run: |
        docker push shadowhub/raz:${{ steps.datetime.outputs.tag }}

    - name: Ensure .kube directory exists
      run: mkdir -p $HOME/.kube

    - name: Set permissions for .kube directory
      run: chmod 700 $HOME/.kube

    - name: Write Kubernetes config
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: echo "$KUBE_CONFIG_DATA" | base64 -d > $HOME/.kube/config

    - name: Install Skaffold
      run: |
        curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
        sudo install skaffold /usr/local/bin/

    - name: Initialize Skaffold
      run: |
        python3 - <<'EOF'
        from subprocess import Popen, PIPE

        # Command to execute
        command = "skaffold init"

        # Input to provide to skaffold init
        input_data = b"N\nN\ny\n"

        # Execute the command
        with Popen(command.split(), stdout=PIPE, stdin=PIPE, stderr=PIPE) as process:
            # Provide input to the process
            output, error = process.communicate(input=input_data)

        # Print the output and error
        print(output.decode())
        print(error.decode())
        EOF

    - name: Run Skaffold
      run: |
        skaffold run 
